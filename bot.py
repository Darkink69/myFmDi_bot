import os
from flask import Flask, request, jsonify
import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv(
    'TELEGRAM_TOKEN')  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Vercel
BASE_URL = f"https://api.telegram.org/bot{TOKEN}"

app = Flask(__name__)


def send_message(chat_id, text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram API"""
    url = f"{BASE_URL}/sendMessage"
    payload = {
        'chat_id': chat_id,
        'text': text,
        'parse_mode': 'HTML'
    }
    response = requests.post(url, json=payload)
    return response.json()


@app.route('/')
def index():
    return 'Bot is running!', 200


@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram
        data = request.get_json()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if 'message' in data:
            message = data['message']
            chat_id = message['chat']['id']

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
            if 'text' in message:
                user_text = message['text']
                user_name = message['from'].get('first_name', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')

                # –°–æ–∑–¥–∞–µ–º –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                response_text = f"–ü—Ä–∏–≤–µ—Ç, {user_name}! ü§ñ\n\n–¢—ã –Ω–∞–ø–∏—Å–∞–ª: <b>{user_text}</b>\n\n–Ø —ç—Ö–æ-–±–æ—Ç –∏ –ø–æ–≤—Ç–æ—Ä—è—é –≤—Å—ë, —á—Ç–æ —Ç—ã –ø–∏—à–µ—à—å!"

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                send_message(chat_id, response_text)

        return jsonify({'status': 'ok'}), 200

    except Exception as e:
        print(f"Error: {e}")
        return jsonify({'status': 'error', 'message': str(e)}), 500


@app.route('/set_webhook', methods=['GET'])
def set_webhook():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞"""
    try:
        # URL –¥–ª—è –≤–µ–±—Ö—É–∫–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Vercel URL)
        webhook_url = f"https://{request.host}/webhook"

        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–µ–±—Ö—É–∫
        requests.get(f"{BASE_URL}/deleteWebhook")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –≤–µ–±—Ö—É–∫
        response = requests.post(
            f"{BASE_URL}/setWebhook",
            json={'url': webhook_url}
        )

        return jsonify({
            'status': 'success',
            'webhook_url': webhook_url,
            'telegram_response': response.json()
        }), 200

    except Exception as e:
        return jsonify({'status': 'error', 'message': str(e)}), 500


@app.route('/info', methods=['GET'])
def info():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"""
    return jsonify({
        'bot': 'Telegram Echo Bot',
        'status': 'active',
        'features': ['Echo messages', 'Webhook support', 'Vercel deployment'],
        'endpoints': {
            'webhook': '/webhook',
            'set_webhook': '/set_webhook',
            'info': '/info'
        }
    }), 200


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Vercel
def handler(event, context):
    from mangum import Mangum
    handler = Mangum(app)
    return handler(event, context)


if __name__ == "__main__":
    # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    app.run(debug=True, host='0.0.0.0', port=int(os.environ.get('PORT', 5000)))